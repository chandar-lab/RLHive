# General training loop config
# Based on https://arxiv.org/pdf/2011.14826.pdf
run_name: &run_name 'breakout-rainbow'
train_steps: 10000000
test_frequency: 1000000
max_steps_per_episode: 10000000
test_episodes: 10
saving_schedule:
  name: 'PeriodicSchedule'
  kwargs:
    off_value: False
    on_value: True
    period: 1000000
save_dir: 'experiment'

# Environment config
environment:
  name: 'MinAtarEnv'
  kwargs:
    env_name: 'breakout'

# Agent config
agent:
  name: 'RainbowDQNAgent'
  kwargs:
    representation_net:
      name: 'ConvNetwork'
      kwargs:
        channels: [16]
        mlp_layers: [128]
        kernel_sizes: [3]
        strides: [1]
        paddings: [0]
        normalization_factor: 1
    optimizer_fn:
      name: 'Adam'
      kwargs:
        lr: 0.00025
        eps: 0.0003125
    loss_fn:
      name: 'SmoothL1Loss'
    init_fn:
      name: "variance_scaling"
    id: 0
    n_step: &n_step 3
    replay_buffer:
      name: 'PrioritizedReplayBuffer'
      kwargs:
        capacity: 100000
        stack_size: 1
        n_step: *n_step
        gamma: .99
    discount_rate: .99
    update_period_schedule:
      name: 'PeriodicSchedule'
      kwargs:
        off_value: False
        on_value: True
        period: 4
    target_net_update_schedule:
      name: 'PeriodicSchedule'
      kwargs:
        off_value: False
        on_value: True
        period: 1000
    epsilon_schedule:
      name: 'LinearSchedule'
      kwargs:
        init_value: 1
        end_value: 0.01
        steps: 250000
    test_epsilon: .01
    min_replay_history: 1000
    batch_size: 32
    device: 'cuda'
    log_frequency: 1000
    double: True
    distributional: True
    use_eps_greedy: True
    dueling: True
    noisy: True
    std_init: .1
    use_eps_greedy: True
    v_min: -100.0
    v_max: 100.0
    atoms: 51
    reward_clip: 1.0

# List of logger configs used.
loggers:
  -
    name: ChompLogger
  -
    name: WandbLogger
    kwargs:
      project: Hive
      name: *run_name
      resume: "allow"
      start_method: "fork"
